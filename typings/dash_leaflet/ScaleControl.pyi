"""
This type stub file was generated by pyright.
"""

import typing
import numbers
from typing_extensions import Literal
from dash.development.base_component import Component, _explicitize_args

class ScaleControl(Component):
    """A ScaleControl component.
A simple scale control that shows the scale of the current center of screen in metric (m/km) and imperial (mi/ft) systems.

Keyword arguments:

- id (string; optional):
    Unique ID to identify this component in Dash callbacks.

- imperial (boolean; optional):
    Whether to show the imperial scale line (mi/ft).

- loading_state (dict; optional):
    Dash loading state information.

- maxWidth (number; optional):
    Maximum width of the control in pixels. The width is set
    dynamically to show round values (e.g. 100, 200, 500).

- metric (boolean; optional):
    Whether to show the metric scale line (m/km).

- position (a value equal to: 'topleft', 'topright', 'bottomleft', 'bottomright'; optional):
    Map control position. [MUTABLE].

- updateWhenIdle (boolean; optional):
    If True, the control is updated on moveend, otherwise it's always
    up-to-date (updated on move)."""
    _children_props = ...
    _base_nodes = ...
    _namespace = ...
    _type = ...
    @_explicitize_args
    def __init__(self, position: typing.Optional[Literal["topleft", "topright", "bottomleft", "bottomright"]] = ..., metric: typing.Optional[bool] = ..., maxWidth: typing.Optional[typing.Union[int, float, numbers.Number]] = ..., imperial: typing.Optional[bool] = ..., updateWhenIdle: typing.Optional[bool] = ..., id: typing.Optional[typing.Union[str, dict]] = ..., loading_state: typing.Optional[dict] = ..., **kwargs) -> None:
        ...
    


