"""
This type stub file was generated by pyright.
"""

import typing
from typing_extensions import Literal
from dash.development.base_component import Component, ComponentType, _explicitize_args

class LayersControl(Component):
    """A LayersControl component.
The layers control gives users the ability to switch between different base layers and switch overlays on/off.

Keyword arguments:

- children (a list of or a singular dash component, string or number; optional):
    Children [MUTABLE].

- id (string; optional):
    Unique ID to identify this component in Dash callbacks.

- autoZIndex (boolean; optional):
    If True, the control will assign zIndexes in increasing order to
    all of its layers so that the order is preserved when switching
    them on/off.

- baseLayer (string; optional):
    Name of the currently selected base layer. [DL].

- collapsed (boolean; optional):
    If True, the control will be collapsed into an icon and expanded
    on mouse hover, touch, or keyboard activation. [MUTABLE].

- hideSingleBase (boolean; optional):
    If True, the base layers in the control will be hidden when there
    is only one.

- loading_state (dict; optional):
    Dash loading state information.

- overlays (list of strings; optional):
    Names of the currently selected overlays. [DL].

- position (a value equal to: 'topleft', 'topright', 'bottomleft', 'bottomright'; optional):
    Map control position. [MUTABLE].

- sortLayers (boolean; optional):
    Whether to sort the layers. When False, layers will keep the order
    in which they were added to the control."""
    _children_props = ...
    _base_nodes = ...
    _namespace = ...
    _type = ...
    @_explicitize_args
    def __init__(self, children: typing.Optional[typing.Union[str, int, float, ComponentType, typing.Sequence[typing.Union[str, int, float, ComponentType]]]] = ..., position: typing.Optional[Literal["topleft", "topright", "bottomleft", "bottomright"]] = ..., collapsed: typing.Optional[bool] = ..., autoZIndex: typing.Optional[bool] = ..., hideSingleBase: typing.Optional[bool] = ..., sortLayers: typing.Optional[bool] = ..., baseLayer: typing.Optional[str] = ..., overlays: typing.Optional[typing.Sequence[str]] = ..., id: typing.Optional[typing.Union[str, dict]] = ..., loading_state: typing.Optional[dict] = ..., **kwargs) -> None:
        ...
    


