"""
This type stub file was generated by pyright.
"""

import typing
from typing_extensions import Literal
from dash.development.base_component import Component, _explicitize_args

class FullScreenControl(Component):
    """A FullScreenControl component.
A basic FullScreen control with two buttons (FullScreen in and FullScreen out). It is put on the map by default unless you set its FullScreenControl option to false.

Keyword arguments:

- id (string; optional):
    Unique ID to identify this component in Dash callbacks.

- content (string; optional):
    Content of the button, can be HTML, default 'None'.

- forcePseudoFullscreen (boolean; optional):
    Force use of pseudo full screen even if full screen API is
    available, default 'False'.

- forceSeparateButton (boolean; optional):
    Force separate button to detach from zoom buttons, default
    'False'.

- fullscreenElement (boolean | number | string | dict | list; optional):
    Dom element to render in full screen, False by default, fallback
    to 'map._container'.

- loading_state (dict; optional):
    Dash loading state information.

- position (a value equal to: 'topleft', 'topright', 'bottomleft', 'bottomright'; optional):
    Map control position.

- title (string; optional):
    Title of the button, default 'Full Screen'.

- titleCancel (string; optional):
    Title of the button when fullscreen is on, default 'Exit Full
    Screen'."""
    _children_props = ...
    _base_nodes = ...
    _namespace = ...
    _type = ...
    @_explicitize_args
    def __init__(self, position: typing.Optional[Literal["topleft", "topright", "bottomleft", "bottomright"]] = ..., title: typing.Optional[str] = ..., content: typing.Optional[str] = ..., titleCancel: typing.Optional[str] = ..., forceSeparateButton: typing.Optional[bool] = ..., forcePseudoFullscreen: typing.Optional[bool] = ..., fullscreenElement: typing.Optional[typing.Any] = ..., id: typing.Optional[typing.Union[str, dict]] = ..., loading_state: typing.Optional[dict] = ..., **kwargs) -> None:
        ...
    


