"""
This type stub file was generated by pyright.
"""

import typing
from typing_extensions import Literal
from dash.development.base_component import Component, ComponentType, _explicitize_args

class Collapse(Component):
    """A Collapse component.
Hide or show content with a vertical collapsing animation. Visibility of the
children is controlled by the `is_open` prop which can be targetted by
callbacks.

Keyword arguments:

- children (a list of or a singular dash component, string or number; optional):
    The children of the Collapse.

- id (string; optional):
    The ID of the Collapse.

- is_open (boolean; optional):
    Whether collapse is currently open.

- dimension (a value equal to: 'height', 'width'; default 'height'):
    The dimension used when collapsing e.g. height will collapse
    vertically, whilst width will collapse horizontally.

- navbar (boolean; optional):
    Set to True when using a collapse inside a navbar.

- class_name (string; optional):
    Additional CSS classes to apply to the Collapse.

- tag (string; optional):
    The HTML tag used for the collapse component.

- key (string; optional):
    A unique identifier for the component, used to improve performance
    by React.js while rendering components  See
    https://react.dev/learn/rendering-lists#why-does-react-need-keys
    for more info.

- className (string; optional):
    **DEPRECATED** Use `class_name` instead.  Additional CSS classes
    to apply to the Collapse."""
    _children_props = ...
    _base_nodes = ...
    _namespace = ...
    _type = ...
    @_explicitize_args
    def __init__(self, children: typing.Optional[typing.Union[str, int, float, ComponentType, typing.Sequence[typing.Union[str, int, float, ComponentType]]]] = ..., id: typing.Optional[typing.Union[str, dict]] = ..., *, is_open: typing.Optional[bool] = ..., dimension: typing.Optional[Literal["height", "width"]] = ..., navbar: typing.Optional[bool] = ..., style: typing.Optional[typing.Any] = ..., class_name: typing.Optional[str] = ..., tag: typing.Optional[str] = ..., key: typing.Optional[str] = ..., className: typing.Optional[str] = ..., **kwargs) -> None:
        ...
    


