"""
This type stub file was generated by pyright.
"""

import typing
from dash.development.base_component import Component, ComponentType, _explicitize_args

class CardImg(Component):
    """A CardImg component.
Use CardImg to add images to your cards.

Keyword arguments:

- children (a list of or a singular dash component, string or number; optional):
    The children of the CardImg.

- id (string; optional):
    The ID of the CardImg.

- src (string; optional):
    The URI of the embeddable content.

- class_name (string; optional):
    Additional CSS classes to apply to the CardImg.

- tag (string; optional):
    HTML tag to use for the CardImg, default: img.

- top (boolean; optional):
    If True the card-img-top class will be applied which rounds the
    top corners of the image to match the corners of the card.

- bottom (boolean; optional):
    If True the card-img-bottom class will be applied which rounds the
    bottom corners of the image to match the corners of the card.

- alt (string; optional):
    Alternative text in case an image can't be displayed.

- title (string; optional):
    Text to be displayed as a tooltip when hovering.

- key (string; optional):
    A unique identifier for the component, used to improve performance
    by React.js while rendering components  See
    https://react.dev/learn/rendering-lists#why-does-react-need-keys
    for more info.

- className (string; optional):
    **DEPRECATED** Use `class_name` instead.  Additional CSS classes
    to apply to the CardImg."""
    _children_props = ...
    _base_nodes = ...
    _namespace = ...
    _type = ...
    @_explicitize_args
    def __init__(self, children: typing.Optional[typing.Union[str, int, float, ComponentType, typing.Sequence[typing.Union[str, int, float, ComponentType]]]] = ..., id: typing.Optional[typing.Union[str, dict]] = ..., *, src: typing.Optional[str] = ..., style: typing.Optional[typing.Any] = ..., class_name: typing.Optional[str] = ..., tag: typing.Optional[str] = ..., top: typing.Optional[bool] = ..., bottom: typing.Optional[bool] = ..., alt: typing.Optional[str] = ..., title: typing.Optional[str] = ..., key: typing.Optional[str] = ..., className: typing.Optional[str] = ..., **kwargs) -> None:
        ...
    


