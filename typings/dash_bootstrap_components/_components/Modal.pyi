"""
This type stub file was generated by pyright.
"""

import typing
import numbers
from typing_extensions import Literal
from dash.development.base_component import Component, ComponentType, _explicitize_args

class Modal(Component):
    """A Modal component.
Create a toggleable dialog using the Modal component. Toggle the visibility with the
`is_open` prop.

Keyword arguments:

- children (a list of or a singular dash component, string or number; optional):
    The children of the Modal.

- id (string; optional):
    The ID of the Modal.

- is_open (boolean; optional):
    Whether modal is currently open.

- centered (boolean; optional):
    If True, vertically center modal on page.

- scrollable (boolean; optional):
    It True, scroll the modal body rather than the entire modal when
    it is too long to all fit on the screen.

- size (string; optional):
    Set the size of the modal. Options sm, lg, xl for small, large or
    extra large sized modals, or leave undefined for default size.

- backdrop (boolean | a value equal to: 'static'; optional):
    Includes a modal-backdrop element. Alternatively, specify 'static'
    for a backdrop which doesn't close the modal on click.

- fullscreen (boolean | a value equal to: 'sm-down', 'md-down', 'lg-down', 'xl-down', 'xxl-down'; optional):
    Renders a fullscreen modal. Specifying a breakpoint will render
    the modal as fullscreen below the breakpoint size.

- keyboard (boolean; optional):
    Close the modal when escape key is pressed.

- fade (boolean; optional):
    Set to False for a modal that simply appears rather than fades
    into view.

- dialog_style (dict; optional):
    Inline CSS styles to apply to the dialog.

- content_style (dict; optional):
    Inline CSS styles to apply to the content.

- backdrop_style (dict; optional):
    Inline CSS styles to apply to the backdrop.

- class_name (string; optional):
    Additional CSS classes to apply to the Modal.

- dialog_class_name (string; optional):
    Additional CSS classes to apply to the modal.

- backdrop_class_name (string; optional):
    Additional CSS classes to apply to the modal-backdrop.

- content_class_name (string; optional):
    Additional CSS classes to apply to the modal content.

- tag (string; optional):
    HTML tag to use for the Modal, default: div.

- autofocus (boolean; optional):
    Puts the focus on the modal when initialized.

- enforceFocus (boolean; optional):
    When True The modal will prevent focus from leaving the Modal
    while open.

- role (string; optional):
    The ARIA role attribute.

- labelledby (string; optional):
    The ARIA labelledby attribute.

- zindex (number | string; optional):
    Set the z-index of the modal. Default 1050.

- dialogStyle (dict; optional):
    **DEPRECATED** Use `dialog_style` instead.  Inline CSS styles to
    apply to the dialog.

- contentStyle (dict; optional):
    **DEPRECATED** Use `content_style` instead.  Inline CSS styles to
    apply to the content.

- backdropStyle (dict; optional):
    **DEPRECATED** Use `content_style` instead.  Inline CSS styles to
    apply to the backdrop.

- className (string; optional):
    **DEPRECATED** Use `class_name` instead.  Additional CSS classes
    to apply to the Modal.

- backdropClassName (string; optional):
    **DEPRECATED** Use `backdrop_class_name` instead  Additional CSS
    classes to apply to the modal-backdrop.

- contentClassName (string; optional):
    **DEPRECATED** Use `content_class_name` instead  Additional CSS
    classes to apply to the modal-content.

- dialogClassName (string; optional):
    **DEPRECATED** Use `dialog_class_name` instead  Additional CSS
    classes to apply to the modal-dialog.

- autoFocus (boolean; optional):
    **DEPRECATED** Use `autofocus` instead          Puts the focus on
    the modal when initialized.

- labelledBy (string; optional):
    **DEPRECATED** Use `labelledby` instead  The ARIA labelledby
    attribute.

- zIndex (number | string; optional):
    **DEPRECATED** Use `zindex` instead  Set the z-index of the modal.
    Default 1050."""
    _children_props = ...
    _base_nodes = ...
    _namespace = ...
    _type = ...
    @_explicitize_args
    def __init__(self, children: typing.Optional[typing.Union[str, int, float, ComponentType, typing.Sequence[typing.Union[str, int, float, ComponentType]]]] = ..., id: typing.Optional[typing.Union[str, dict]] = ..., *, is_open: typing.Optional[bool] = ..., centered: typing.Optional[bool] = ..., scrollable: typing.Optional[bool] = ..., size: typing.Optional[str] = ..., backdrop: typing.Optional[typing.Union[bool, Literal["static"]]] = ..., fullscreen: typing.Optional[typing.Union[bool, Literal["sm-down", "md-down", "lg-down", "xl-down", "xxl-down"]]] = ..., keyboard: typing.Optional[bool] = ..., fade: typing.Optional[bool] = ..., style: typing.Optional[typing.Any] = ..., dialog_style: typing.Optional[dict] = ..., content_style: typing.Optional[dict] = ..., backdrop_style: typing.Optional[dict] = ..., class_name: typing.Optional[str] = ..., dialog_class_name: typing.Optional[str] = ..., backdrop_class_name: typing.Optional[str] = ..., content_class_name: typing.Optional[str] = ..., tag: typing.Optional[str] = ..., autofocus: typing.Optional[bool] = ..., enforceFocus: typing.Optional[bool] = ..., role: typing.Optional[str] = ..., labelledby: typing.Optional[str] = ..., zindex: typing.Optional[typing.Union[typing.Union[int, float, numbers.Number], str]] = ..., dialogStyle: typing.Optional[dict] = ..., contentStyle: typing.Optional[dict] = ..., backdropStyle: typing.Optional[dict] = ..., className: typing.Optional[str] = ..., backdropClassName: typing.Optional[str] = ..., contentClassName: typing.Optional[str] = ..., dialogClassName: typing.Optional[str] = ..., autoFocus: typing.Optional[bool] = ..., labelledBy: typing.Optional[str] = ..., zIndex: typing.Optional[typing.Union[typing.Union[int, float, numbers.Number], str]] = ..., **kwargs) -> None:
        ...
    


