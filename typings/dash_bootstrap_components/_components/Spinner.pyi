"""
This type stub file was generated by pyright.
"""

import typing
import numbers
from typing_extensions import Literal
from dash.development.base_component import Component, ComponentType, _explicitize_args

class Spinner(Component):
    """A Spinner component.
Render Bootstrap style loading spinners using only CSS.

This component can be used standalone to render a loading spinner, or it can
be used like `dash_core_components.Loading` by giving it children. In the
latter case the chosen spinner will display while the children are loading.

Keyword arguments:

- children (a list of or a singular dash component, string or number; optional):
    The children of this Spinner.

- id (string; optional):
    The ID of the Spinner.

- color (string; optional):
    Sets the color of the Spinner. Main options are Bootstrap
    contextual colors: primary, secondary, success, info, warning,
    danger, light, dark, body, muted, white-50, black-50. You can also
    specify any valid CSS color of your choice (e.g. a hex code, a
    decimal code or a CSS color name)  If not specified will default
    to text colour.

- type (string; default 'border'):
    The type of spinner. Options 'border' and 'grow'. Default
    'border'.

- size (string; optional):
    The spinner size. Options are 'sm', and 'md'.

- fullscreen (boolean; optional):
    Boolean that determines if the loading spinner will be displayed
    full-screen or not.

- delay_hide (number; default 0):
    When using the Spinner as a loading spinner, add a time delay (in
    ms) to the spinner being removed to prevent flickering.

- delay_show (number; default 0):
    When using the Spinner as a loading spinner, add a time delay (in
    ms) to the spinner being shown after the component starts loading.

- show_initially (boolean; default True):
    Whether the Spinner should show on app start-up before the loading
    state has been determined. Default True.

- spinner_style (dict; optional):
    Inline CSS styles to apply to the Spinner.

- spinner_class_name (string; optional):
    CSS class names to apply to the Spinner.

- fullscreen_style (dict; optional):
    Defines CSS styles for the container when fullscreen=True.

- fullscreen_class_name (string; optional):
    Additional CSS classes to apply to the Spinner when
    fullscreen=True.

- display (a value equal to: 'auto', 'show', 'hide'; optional):
    Setting display to  \"show\" or \"hide\"  will override the
    loading state coming from dash-renderer.

- target_components (dict with strings as keys and values of type string | list of strings; optional):
    Specify component and prop to trigger showing the loading spinner
    example: `{\"output-container\": \"children\", \"grid\":
    [\"rowData\", \"columnDefs]}`.

- fullscreenClassName (string; optional):
    **DEPRECATED** - use `fullscreen_class_name` instead.  Additional
    CSS classes to apply to the Spinner when fullscreen=True.

- spinnerClassName (string; optional):
    **DEPRECATED** - use `spinner_class_name` instead.  CSS class
    names to apply to the spinner."""
    _children_props = ...
    _base_nodes = ...
    _namespace = ...
    _type = ...
    @_explicitize_args
    def __init__(self, children: typing.Optional[typing.Union[str, int, float, ComponentType, typing.Sequence[typing.Union[str, int, float, ComponentType]]]] = ..., id: typing.Optional[typing.Union[str, dict]] = ..., *, color: typing.Optional[str] = ..., type: typing.Optional[str] = ..., size: typing.Optional[str] = ..., fullscreen: typing.Optional[bool] = ..., delay_hide: typing.Optional[typing.Union[int, float, numbers.Number]] = ..., delay_show: typing.Optional[typing.Union[int, float, numbers.Number]] = ..., show_initially: typing.Optional[bool] = ..., spinner_style: typing.Optional[dict] = ..., spinner_class_name: typing.Optional[str] = ..., fullscreen_style: typing.Optional[dict] = ..., fullscreen_class_name: typing.Optional[str] = ..., display: typing.Optional[Literal["auto", "show", "hide"]] = ..., target_components: typing.Optional[typing.Dict[typing.Union[str, float, int], typing.Union[str, typing.Sequence[str]]]] = ..., fullscreenClassName: typing.Optional[str] = ..., spinnerClassName: typing.Optional[str] = ..., **kwargs) -> None:
        ...
    


