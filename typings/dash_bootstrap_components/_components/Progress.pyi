"""
This type stub file was generated by pyright.
"""

import typing
import numbers
from dash.development.base_component import Component, ComponentType, _explicitize_args

class Progress(Component):
    """A Progress component.
Component for displaying progress bars, with support for stacked bars, animated
backgrounds, and text labels.

Keyword arguments:

- children (a list of or a singular dash component, string or number; optional):
    The children of this Progress. Use this to nest progress bars.

- id (string; optional):
    The ID of the Progress.

- value (string | number; optional):
    Specify progress, value from min to max inclusive.

- label (string; optional):
    Adds a label to the progress bar.

- min (number; optional):
    Lower limit for value, default: 0.

- max (number; optional):
    Upper limit for value, default: 100.

- color (string; optional):
    Set color of the progress bar, options: primary, secondary,
    success, warning, danger, info or any valid CSS color of your
    choice (e.g. a hex code, a decimal code or a CSS color name).

- bar (boolean; optional):
    Set to True when nesting Progress inside another Progress
    component to create a multi-progress bar.

- hide_label (boolean; default False):
    Set to True to hide the label.

- animated (boolean; optional):
    Animate the bar, must have striped set to True to work.

- striped (boolean; optional):
    Use striped progress bar.

- class_name (string; optional):
    Additional CSS classes to apply to the Progress.

- key (string; optional):
    A unique identifier for the component, used to improve performance
    by React.js while rendering components  See
    https://react.dev/learn/rendering-lists#why-does-react-need-keys
    for more info.

- className (string; optional):
    **DEPRECATED** Use `class_name` instead.  Additional CSS classes
    to apply to the Progress."""
    _children_props = ...
    _base_nodes = ...
    _namespace = ...
    _type = ...
    @_explicitize_args
    def __init__(self, children: typing.Optional[typing.Union[str, int, float, ComponentType, typing.Sequence[typing.Union[str, int, float, ComponentType]]]] = ..., id: typing.Optional[typing.Union[str, dict]] = ..., *, value: typing.Optional[typing.Union[str, typing.Union[int, float, numbers.Number]]] = ..., label: typing.Optional[str] = ..., min: typing.Optional[typing.Union[int, float, numbers.Number]] = ..., max: typing.Optional[typing.Union[int, float, numbers.Number]] = ..., color: typing.Optional[str] = ..., bar: typing.Optional[bool] = ..., hide_label: typing.Optional[bool] = ..., animated: typing.Optional[bool] = ..., striped: typing.Optional[bool] = ..., style: typing.Optional[typing.Any] = ..., class_name: typing.Optional[str] = ..., key: typing.Optional[str] = ..., className: typing.Optional[str] = ..., **kwargs) -> None:
        ...
    


