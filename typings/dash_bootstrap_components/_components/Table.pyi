"""
This type stub file was generated by pyright.
"""

import typing
from dash.development.base_component import Component, ComponentType, _explicitize_args

class Table(Component):
    """A Table component.
A component for applying Bootstrap styles to HTML tables. Use this as a drop-in
replacement for `html.Table`, or generate a table from a Pandas DataFrame using
`dbc.Table.from_dataframe`.

Keyword arguments:

- children (a list of or a singular dash component, string or number; optional):
    The children of this Table.

- id (string; optional):
    The ID of the Table.

- class_name (string; optional):
    Additional CSS classes to apply to the Table.

- size (string; optional):
    Specify table size, options: 'sm', 'md', 'lg'.

- bordered (boolean; optional):
    Apply the `table-bordered` class which adds borders on all sides
    of the table and cells.

- borderless (boolean; optional):
    Apply the `table-borderless` class which removes all borders from
    the table and cells.

- striped (boolean; optional):
    Apply the `table-striped` class which applies 'zebra striping' to
    rows in the table body.

- color (string; optional):
    Table color, options: primary, secondary, success, info, warning,
    danger, dark, light. Default: secondary.

- hover (boolean; optional):
    Apply the `table-hover` class which enables a hover state on table
    rows within the table body.

- responsive (boolean | string; optional):
    Set to True or one of the breakpoints 'sm', 'md', 'lg', 'xl' to
    make table scroll horizontally at lower breakpoints.

- key (string; optional):
    A unique identifier for the component, used to improve performance
    by React.js while rendering components  See
    https://react.dev/learn/rendering-lists#why-does-react-need-keys
    for more info.

- className (string; optional):
    **DEPRECATED** Use `class_name` instead.  Additional CSS classes
    to apply to the Table."""
    _children_props = ...
    _base_nodes = ...
    _namespace = ...
    _type = ...
    @_explicitize_args
    def __init__(self, children: typing.Optional[typing.Union[str, int, float, ComponentType, typing.Sequence[typing.Union[str, int, float, ComponentType]]]] = ..., id: typing.Optional[typing.Union[str, dict]] = ..., *, style: typing.Optional[typing.Any] = ..., class_name: typing.Optional[str] = ..., size: typing.Optional[str] = ..., bordered: typing.Optional[bool] = ..., borderless: typing.Optional[bool] = ..., striped: typing.Optional[bool] = ..., color: typing.Optional[str] = ..., hover: typing.Optional[bool] = ..., responsive: typing.Optional[typing.Union[bool, str]] = ..., key: typing.Optional[str] = ..., className: typing.Optional[str] = ..., **kwargs) -> None:
        ...
    


