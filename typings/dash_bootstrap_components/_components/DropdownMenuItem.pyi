"""
This type stub file was generated by pyright.
"""

import typing
import numbers
from dash.development.base_component import Component, ComponentType, _explicitize_args

class DropdownMenuItem(Component):
    """A DropdownMenuItem component.
Use DropdownMenuItem to build up the content of a DropdownMenu.

Keyword arguments:

- children (a list of or a singular dash component, string or number; optional):
    The children of this DropdownMenuItem.

- id (string; optional):
    The ID of the DropdownMenuItem.

- href (string; optional):
    A URL to link to, if the DropdownMenuItem is clicked.

- external_link (boolean; optional):
    If True, clicking on the DropdownMenuItem will behave like a
    hyperlink. If False, the DropdownMenuItem will behave like a
    dcc.Link component, and can be used in conjunction with
    dcc.Location for navigation within a Dash app.

- n_clicks (number; default 0):
    The number of times the DropdownMenuItem has been clicked.

- class_name (string; optional):
    Additional CSS classes to apply to the DropdownMenuItem.

- active (boolean; optional):
    Style this item as 'active'.

- disabled (boolean; optional):
    Style this item as 'disabled'.

- divider (boolean; optional):
    Set to True if this entry is a divider. Typically, it will have no
    children.

- header (boolean; optional):
    Set to True if this is a header, rather than a conventional menu
    item.

- toggle (boolean; default True):
    Whether to toggle the DropdownMenu on click. Default: True.

- target (string; optional):
    Target attribute to pass on to the link. Only applies to external
    links.

- key (string; optional):
    A unique identifier for the component, used to improve performance
    by React.js while rendering components  See
    https://react.dev/learn/rendering-lists#why-does-react-need-keys
    for more info.

- className (string; optional):
    **DEPRECATED** Use `class_name` instead.  Additional CSS classes
    to apply to the DropdownMenuItem."""
    _children_props = ...
    _base_nodes = ...
    _namespace = ...
    _type = ...
    @_explicitize_args
    def __init__(self, children: typing.Optional[typing.Union[str, int, float, ComponentType, typing.Sequence[typing.Union[str, int, float, ComponentType]]]] = ..., id: typing.Optional[typing.Union[str, dict]] = ..., *, href: typing.Optional[str] = ..., external_link: typing.Optional[bool] = ..., n_clicks: typing.Optional[typing.Union[int, float, numbers.Number]] = ..., style: typing.Optional[typing.Any] = ..., class_name: typing.Optional[str] = ..., active: typing.Optional[bool] = ..., disabled: typing.Optional[bool] = ..., divider: typing.Optional[bool] = ..., header: typing.Optional[bool] = ..., toggle: typing.Optional[bool] = ..., target: typing.Optional[str] = ..., key: typing.Optional[str] = ..., className: typing.Optional[str] = ..., **kwargs) -> None:
        ...
    


