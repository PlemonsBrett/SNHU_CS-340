"""
This type stub file was generated by pyright.
"""

import typing
from dash.development.base_component import Component, ComponentType, _explicitize_args

class Container(Component):
    """A Container component.
Containers provide a means to center and horizontally pad your siteâ€™s contents.

Keyword arguments:

- children (a list of or a singular dash component, string or number; optional):
    The children of the Container.

- id (string; optional):
    The ID of the Container.

- fluid (boolean | string; optional):
    If True the container-fluid class will be applied, and the
    Container will expand to fill available space. A non-fluid
    container resizes responsively to a fixed width at the different
    breakpoints.  You can also set the fluid property to one of the
    Bootstrap breakpoints: \"sm\", \"md\", \"lg\", \"xl\" or \"xxl\",
    so that the container fluidly expands to fill the screen until the
    specified breakpoint, then resize responsively at higher
    breakpoints.

- class_name (string; optional):
    Additional CSS classes to apply to the Container.

- tag (string; optional):
    HTML tag to apply the container class to, default: div.

- key (string; optional):
    A unique identifier for the component, used to improve performance
    by React.js while rendering components  See
    https://react.dev/learn/rendering-lists#why-does-react-need-keys
    for more info.

- className (string; optional):
    **DEPRECATED** Use `class_name` instead.  Additional CSS classes
    to apply to the Container."""
    _children_props = ...
    _base_nodes = ...
    _namespace = ...
    _type = ...
    @_explicitize_args
    def __init__(self, children: typing.Optional[typing.Union[str, int, float, ComponentType, typing.Sequence[typing.Union[str, int, float, ComponentType]]]] = ..., id: typing.Optional[typing.Union[str, dict]] = ..., *, fluid: typing.Optional[typing.Union[bool, str]] = ..., style: typing.Optional[typing.Any] = ..., class_name: typing.Optional[str] = ..., tag: typing.Optional[str] = ..., key: typing.Optional[str] = ..., className: typing.Optional[str] = ..., **kwargs) -> None:
        ...
    


