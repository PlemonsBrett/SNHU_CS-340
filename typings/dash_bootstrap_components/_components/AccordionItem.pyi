"""
This type stub file was generated by pyright.
"""

import typing
from dash.development.base_component import Component, ComponentType, _explicitize_args

class AccordionItem(Component):
    """An AccordionItem component.
A component to build up the children of the accordion.

Keyword arguments:

- id (string; optional):
    The ID of the AccordionItem.

- children (a list of or a singular dash component, string or number; optional):
    The children of the AccordionItem.

- title (a list of or a singular dash component, string or number; optional):
    Text to display in the header of the AccordionItem.

- item_id (string; optional):
    Optional identifier for item used for determining which item is
    visible if not specified, and AccordionItem is being used inside
    Accordion component, the item_id will be set to \"item-i\" where i
    is (zero indexed) position of item in list items passed to
    Accordion component.

- class_name (string; optional):
    Additional CSS classes to apply to the AccordionItem.

- className (string; optional):
    **DEPRECATED** Use `class_name` instead.  Additional CSS classes
    to apply to the AccordionItem."""
    _children_props = ...
    _base_nodes = ...
    _namespace = ...
    _type = ...
    @_explicitize_args
    def __init__(self, children: typing.Optional[typing.Union[str, int, float, ComponentType, typing.Sequence[typing.Union[str, int, float, ComponentType]]]] = ..., id: typing.Optional[typing.Union[str, dict]] = ..., *, title: typing.Optional[typing.Union[str, int, float, ComponentType, typing.Sequence[typing.Union[str, int, float, ComponentType]]]] = ..., item_id: typing.Optional[str] = ..., style: typing.Optional[typing.Any] = ..., class_name: typing.Optional[str] = ..., className: typing.Optional[str] = ..., **kwargs) -> None:
        ...
    


