"""
This type stub file was generated by pyright.
"""

import typing
from typing_extensions import Literal
from dash.development.base_component import Component, ComponentType, _explicitize_args

class Offcanvas(Component):
    """An Offcanvas component.
Create a toggleable hidden sidebar using the Offcanvas component.
Toggle the visibility with the `is_open` prop.

Keyword arguments:

- children (a list of or a singular dash component, string or number; optional):
    The children of the Offcanvas.

- id (string; optional):
    The ID of the Offcanvas.

- is_open (boolean; default False):
    Whether offcanvas is currently open.

- title (a list of or a singular dash component, string or number; optional):
    The header title.

- placement (a value equal to: 'start', 'end', 'top', 'bottom'; optional):
    Which side of the viewport the offcanvas will appear from.

- backdrop (boolean | a value equal to: 'static'; default True):
    Includes an offcanvas-backdrop element. Alternatively, specify
    'static' for a backdrop which doesn't close the modal on click.

- close_button (boolean; default True):
    Specify whether the Offcanvas should contain a close button in the
    header.

- keyboard (boolean; optional):
    If True, the offcanvas will close when the escape key is pressed.

- scrollable (boolean; optional):
    Allow body scrolling while offcanvas is open.

- class_name (string; optional):
    Additional CSS classes to apply to the Offcanvas.

- backdrop_class_name (string; optional):
    CSS class to apply to the backdrop.

- autofocus (boolean; optional):
    Puts the focus on the offcanvas when initialized.

- labelledby (string; optional):
    The ARIA labelledby attribute.

- className (string; optional):
    **DEPRECATED** - Use class_name instead.  Additional CSS classes
    to apply to the Offcanvas.

- backdropClassName (string; optional):
    **DEPRECATED** - Use backdrop_class_name instead.  CSS class to
    apply to the backdrop.

- autoFocus (boolean; optional):
    **DEPRECATED** Use `autofocus` instead          Puts the focus on
    the modal when initialized.

- labelledBy (string; optional):
    **DEPRECATED** Use `labelledby` instead  The ARIA labelledby
    attribute."""
    _children_props = ...
    _base_nodes = ...
    _namespace = ...
    _type = ...
    @_explicitize_args
    def __init__(self, children: typing.Optional[typing.Union[str, int, float, ComponentType, typing.Sequence[typing.Union[str, int, float, ComponentType]]]] = ..., id: typing.Optional[typing.Union[str, dict]] = ..., *, is_open: typing.Optional[bool] = ..., title: typing.Optional[typing.Union[str, int, float, ComponentType, typing.Sequence[typing.Union[str, int, float, ComponentType]]]] = ..., placement: typing.Optional[Literal["start", "end", "top", "bottom"]] = ..., backdrop: typing.Optional[typing.Union[bool, Literal["static"]]] = ..., close_button: typing.Optional[bool] = ..., keyboard: typing.Optional[bool] = ..., scrollable: typing.Optional[bool] = ..., style: typing.Optional[typing.Any] = ..., class_name: typing.Optional[str] = ..., backdrop_class_name: typing.Optional[str] = ..., autofocus: typing.Optional[bool] = ..., labelledby: typing.Optional[str] = ..., className: typing.Optional[str] = ..., backdropClassName: typing.Optional[str] = ..., autoFocus: typing.Optional[bool] = ..., labelledBy: typing.Optional[str] = ..., **kwargs) -> None:
        ...
    


