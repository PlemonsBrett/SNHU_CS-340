"""
This type stub file was generated by pyright.
"""

import typing
import numbers
from typing_extensions import Literal
from dash.development.base_component import Component, ComponentType, _explicitize_args

class Placeholder(Component):
    """A Placeholder component.
Use loading Placeholders for your components or pages to indicate
something may still be loading.

Keyword arguments:

- children (a list of or a singular dash component, string or number; optional):
    The children of the Placeholder.

- id (string; optional):
    The ID of the Placeholder.

- animation (a value equal to: 'glow', 'wave'; optional):
    Changes the animation of the Placeholder.

- color (string; optional):
    Background color, options: primary, secondary, success, info,
    warning, danger, light, dark.

- size (a value equal to: 'xs', 'sm', 'lg'; optional):
    Placeholder size variations. Only valid when `button=False`.

- button (boolean; default False):
    Show as a button shape.

- delay_hide (number; default 0):
    When using the placeholder as a loading placeholder, add a time
    delay (in ms) to the placeholder being removed to prevent
    flickering.

- delay_show (number; default 0):
    When using the placeholder as a loading placeholder, add a time
    delay (in ms) to the placeholder being shown after the lcomponent
    starts loading.

- show_initially (boolean; default True):
    Whether the Placeholder should show on app start-up before the
    loading state has been determined. Default True.

- class_name (string; optional):
    Additional CSS classes to apply to the Placeholder.

- xs (number; optional):
    Specify placeholder behaviour on an extra small screen.  Valid
    arguments are boolean, an integer in the range 1-12 inclusive. See
    the documentation for more details.

- sm (number; optional):
    Specify placeholder behaviour on a small screen.  Valid arguments
    are boolean, an integer in the range 1-12 inclusive. See the
    documentation for more details.

- md (number; optional):
    Specify placeholder behaviour on a medium screen.  Valid arguments
    are boolean, an integer in the range 1-12 inclusive. See the
    documentation for more details.

- lg (number; optional):
    Specify placeholder behaviour on a large screen.  Valid arguments
    are boolean, an integer in the range 1-12 inclusive. See the
    documentation for more details.

- xl (number; optional):
    Specify placeholder behaviour on an extra large screen.  Valid
    arguments are boolean, an integer in the range 1-12 inclusive. See
    the documentation for more details.

- xxl (number; optional):
    Specify placeholder behaviour on an extra extra large screen.
    Valid arguments are boolean, an integer in the range 1-12
    inclusive. See the documentation for more details.

- target_components (dict with strings as keys and values of type string | list of strings; optional):
    Specify component and prop to trigger showing the placeholder.
    Example: `{\"output-container\": \"children\", \"grid\":
    [\"rowData\", \"columnDefs]}`.

- display (a value equal to: 'auto', 'show', 'hide'; default 'auto'):
    Setting display to  \"show\" or \"hide\"  will override the
    loading state coming from dash-renderer.

- key (string; optional):
    A unique identifier for the component, used to improve performance
    by React.js while rendering components  See
    https://react.dev/learn/rendering-lists#why-does-react-need-keys
    for more info.

- className (string; optional):
    **DEPRECATED** Use `class_name` instead.  Additional CSS classes
    to apply to the Placeholder."""
    _children_props = ...
    _base_nodes = ...
    _namespace = ...
    _type = ...
    @_explicitize_args
    def __init__(self, children: typing.Optional[typing.Union[str, int, float, ComponentType, typing.Sequence[typing.Union[str, int, float, ComponentType]]]] = ..., id: typing.Optional[typing.Union[str, dict]] = ..., *, animation: typing.Optional[Literal["glow", "wave"]] = ..., color: typing.Optional[str] = ..., size: typing.Optional[Literal["xs", "sm", "lg"]] = ..., button: typing.Optional[bool] = ..., delay_hide: typing.Optional[typing.Union[int, float, numbers.Number]] = ..., delay_show: typing.Optional[typing.Union[int, float, numbers.Number]] = ..., show_initially: typing.Optional[bool] = ..., style: typing.Optional[typing.Any] = ..., class_name: typing.Optional[str] = ..., xs: typing.Optional[typing.Union[int, float, numbers.Number]] = ..., sm: typing.Optional[typing.Union[int, float, numbers.Number]] = ..., md: typing.Optional[typing.Union[int, float, numbers.Number]] = ..., lg: typing.Optional[typing.Union[int, float, numbers.Number]] = ..., xl: typing.Optional[typing.Union[int, float, numbers.Number]] = ..., xxl: typing.Optional[typing.Union[int, float, numbers.Number]] = ..., target_components: typing.Optional[typing.Dict[typing.Union[str, float, int], typing.Union[str, typing.Sequence[str]]]] = ..., display: typing.Optional[Literal["auto", "show", "hide"]] = ..., key: typing.Optional[str] = ..., className: typing.Optional[str] = ..., **kwargs) -> None:
        ...
    


